---
import { removeTrailingSlash } from '../util.ts';

const mainNavLinks = [
	{ path: '/foundations', label: 'Foundations' },
	{ path: '/content', label: 'Content' },
	{ path: '/design/design-tokens', label: 'Design' },
	{ path: '/components', label: 'Components' },
	{ path: '/experiences', label: 'Experiences' },
]

const currentPageMatch = removeTrailingSlash(Astro.request.url.pathname);
---
<header>
	<h1>Fabric</h1>
	<nav aria-label="Primary navigation">
		<ul>
			{mainNavLinks.map(link => (
				<li>
					<a
						href={link.path}
						aria-current={`${
							currentPageMatch === link.path ? 'page' : 'false'
						}`}
					>
						{link.label}
					</a>
				</li>
			))}
		</ul>
	</nav>
</header>

<style lang="scss">
	@use '../styles/tokens';

	header {
		grid-area: header;

		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		gap: tokens.$size-spacing-md;

		padding-inline: tokens.$size-spacing-md;
	}

	h1 {
		flex-grow: 1;
		font-stretch: 150%;
	}

	nav * {
		block-size: 100%;
	}

	ul {
		display: flex;
		flex-wrap: wrap;
		gap: tokens.$size-spacing-md;

		padding: 0;
		margin: 0;

		list-style-type: none;
	}

	a {
		display: flex;
		align-items: center;

		padding: tokens.$size-spacing-md;

		text-decoration: none;
	}

	a:hover,
	a:focus,
	[aria-current=page] {
		position: relative;

		outline: none;

		&::before {
			content: '';
			position: absolute;
			inset: 0 tokens.$size-spacing-md auto;

			block-size: .5rem;
			
			background-color: currentColor;
		}
	}
	a:hover,
	a:focus {
		text-decoration: underline;
	}
	a:hover:not([aria-current=page])::before,
	a:focus:not([aria-current=page])::before {
		opacity: .5;
	}
	[aria-current=page]::before {
		opacity: 1;
	}
</style>