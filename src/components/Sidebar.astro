---
import { removeTrailingSlash } from '../util.ts';

const { navBlocks } = Astro.props;

const currentPageMatch = removeTrailingSlash(Astro.request.url.pathname);
---
<aside>
	{ navBlocks && (
		<nav aria-label="Secondary navigation">
			<ul>
				{navBlocks.map(navBlock => {
					if ('heading' in navBlock) {
						return (
							<li>
								<h4 aria-label={navBlock.heading}>{navBlock.heading}</h4>
							</li>
							<ul>
								{navBlock.links.map(link => (
									<li>
										<a
											href={link.path}
											aria-current={`${
												currentPageMatch === link.path ? 'page' : 'false'
											}`}
										>
											{link.label}
										</a>
									</li>
								))}
							</ul>
						);
					}
					return (
						<ul>
							{navBlock.links.map(link => (
								<li>
									<a
										href={link.path}
										aria-current={`${
											currentPageMatch === link.path ? 'page' : 'false'
										}`}
									>
										{link.label}
									</a>
									{'links' in link && (
										<ul>
											{link.links.map(subLink => (
												<li>
													<a
														href={subLink.path}
														aria-current={`${
															currentPageMatch === subLink.path ? 'page' : 'false'
														}`}
													>
														{subLink.label}
													</a>
												</li>
											))}
										</ul>
									)}
								</li>
							))}
						</ul>
					);
				})}
			</ul>
		</nav>
	)}
	<slot />
</aside>

<style lang="scss">
	@use '../styles/tokens';
	@use '../styles/variables';

	aside {
		grid-area: sidebar;
	}

	nav {
		position: sticky;
		inset-block-start: 0;
	}

	h4 {
		margin: 0;

		text-transform: uppercase;
		letter-spacing: .0625em;
		font-weight: 600;
	}

	ul {
		display: flex;
		min-block-size: 100%;
		flex-flow: column nowrap;
		padding: 0;
		margin: 0;
		list-style-type: none;
	}

	ul + li {
		margin-block-start: tokens.$size-spacing-3xl;
	}

	li {
		display: flex;
		flex-direction: column;
		flex: 1;

		margin-block-start: tokens.$size-spacing-md;
		padding-inline-start: tokens.$size-spacing-md;
	}

	a {
		padding: tokens.$size-spacing-xs;
		border-radius: tokens.$size-border-radius-medium;
		text-decoration: none;
		&[aria-current=page] {
			color: variables.$color-background-secondary;
			background-color: variables.$color-background-primary-dark;
			@media (prefers-color-scheme: dark) {
				color: variables.$color-foreground;
				background-color: variables.$color-background-secondary;
			}
		}
	}

	/* li > ul > li:first-child {
		margin-block-start: tokens.$size-spacing-md;
	} */
</style>
